#-------------------
# stty and inputs
#-------------------

case "$-" in
*i*)
stty kill undef
bind -f ~/.inputrc
stty erase ^?
esac

#-------------------
# Options
#-------------------

set -o pipefail
set -o ignoreeof
shopt -s expand_aliases
shopt -s checkwinsize
shopt -s no_empty_cmd_completion
shopt -s cmdhist

#-------------------
# Environment variables
#-------------------

export VIMDIR='~/.vim/'
export EDITOR='vim'
export CVSEDITOR='vim'
#export PYTHONDONTWRITEBYTECODE='1'
#export PYTHONUNBUFFERED='1'
export HISTIGNORE='&: *:l:ll:history*:ls:cd:clear:..:...:....:p:dirs:1:2:3:4:5:6:7:8:9'
export HISTTIMEFORMAT='%F %T '
export CVS_RSH="ssh"
export CLICOLOR="yes"

# Set appropriate ls alias
case $(uname -s) in
    FreeBSD)
        export LSCOLORS="DxGxFxdxCxDxDxhbadExEx"
        alias ls="ls -hFG -D '%Y%m%d %T'"
    ;;
    Darwin)
        alias ls="gls -hFG --color --time-style='+%Y%m%d %T'"
    ;;
    Linux)
        alias ls="ls -hF --color --time-style='+%Y%m%d %T'"
    ;;
esac

#-------------------
# Personnal Aliases
#-------------------
alias bell='echo -ne "\a"'
alias vi='vim'
alias view='vim -R'
alias sb='source ~/.bashrc'
alias grep='egrep'
alias g='egrep --color=auto'
alias gub='egrep --line-buffered'
alias h='history 25'
alias bc='bc -l'
#alias j='jobs -l' # This is used for autojump now
alias ll='ls -l'
alias la='ll -a'
alias l='ll'
alias lll='ll'
alias llll='ll'
alias lllll='ll'
alias llllll='ll'
alias which='type -all'
alias mkdir='mkdir -p'
alias R='R --no-save'
alias shuf="perl -MList::Util=shuffle -e'print shuffle<>'"
alias findvis="find . \( ! -regex '.*/\..*' \) -type f"
#alias xargso="xargs sh -c 'vim \"\$@\" </dev/tty' vim"
alias xargso="xargs sh -c '/usr/local/bin/mvim -v \"\$@\" </dev/tty' vim"

# tailoring 'less'
alias  more='less'
export PAGER=less
export LESS='--ignore-case --hilite-unread  --window=-4 --LONG-PROMPT -R -X -P%t?f%f :stdin .?pb%pb\%:?lbLine %lb:?bbByte %bb:-...' # Use this if lesspipe.sh exists.

umask 022

#--------------
# autojump and dir navigation
#--------------

export AUTOJUMP_IGNORE_CASE=1
[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias d='(dirs -v | gawk "{print \$1,\$2,\$1}" | column -t | gawk "{ if((getline nextLine) > 0) {print \"\033[1;33m\" \$0 \"\n\033[1;34m\" nextLine} else {print \"\033[1;33m\" \$0} }"; echo -en "\033[0m")'
alias 1='cd `dirs -l +1`; d'
alias 2='cd `dirs -l +2`; d'
alias 3='cd `dirs -l +3`; d'
alias 4='cd `dirs -l +4`; d'
alias 5='cd `dirs -l +5`; d'
alias 6='cd `dirs -l +6`; d'
alias 7='cd `dirs -l +7`; d'
alias 8='cd `dirs -l +8`; d'
alias 9='cd `dirs -l +9`; d'
alias 10='cd `dirs -l +10`; d'
alias 11='cd `dirs -l +11`; d'
alias 12='cd `dirs -l +12`; d'
alias 13='cd `dirs -l +13`; d'
alias 14='cd `dirs -l +14`; d'
alias 15='cd `dirs -l +15`; d'
alias 16='cd `dirs -l +16`; d'
alias 17='cd `dirs -l +17`; d'
alias 18='cd `dirs -l +18`; d'
alias 19='cd `dirs -l +19`; d'

function TRAPUSR2()
{
    source ~/.bashrc
}
trap TRAPUSR2 USR2


#-----------------------------------
# File & strings related functions:
#-----------------------------------

function swap()         # swap 2 filenames around
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}

function despace()      # remove spaces from filename
{
    newname=$(echo $1 | tr ' ' _)
    mv "$1" $newname
}

function cd()
{
   MAX=20
   LEN=${#DIRSTACK[@]}

   if [ $# -eq 0 ] || [ "$1" = "-" ]; then
      builtin cd "$@"
      pushd -n $OLDPWD > /dev/null
   else
      pushd "$@" > /dev/null || return 1
   fi

   if [ $LEN -gt 1 ]; then
      seqcommand="seq"
      which seq 1>/dev/null 2>&-1
      if [ $? -ne 0 ]; then
         seqcommand="jot -"
      fi
      for i in `$seqcommand 1 $LEN`; do
         eval p=~$i
         if [ "$p" = "$PWD" ]; then
            popd -n +$i > /dev/null
            break
         fi
      done
   fi

   if [ $LEN -ge $MAX ]; then
      popd -n -0 > /dev/null
   fi
}

# https://chris-lamb.co.uk/2010/04/22/locating-source-any-python-module/
function cdp () {
cd "$(python -c "import sys, imp, os
path = sys.path
for i in '${1}'.split('.'): path = [imp.find_module(i,path)[1],]
path = path[0] if os.path.isdir(path[0]) else os.path.dirname(path[0])
print path")"
}

#-----------------------------------
# preexec stuff
#-----------------------------------
# This should be as close to the end as possible
if [[ -n $TMUX ]]
then
    source ~/.dotfiles/preexec.bash.txt

    function precmd () {
        if tmux source-file /dev/null 2> /dev/null; then
#            tmux set -q status-left "[#S] #P $(pwd)"
            tmux set -q set-titles-string "$(basename `pwd` | perl -pe "s/^(.{7}).*(.{7})$/\$1..\$2/") (#{pane_current_command})"
        fi
    }

    case "$-" in
    *i*)
    preexec_install
    esac
fi

source ~/Library/Python/3.5/lib/python/site-packages/powerline/bindings/bash/powerline.sh
